name: Pull Request

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

# Cancel in-progress workflows when we update the branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  build-and-lint:
    timeout-minutes: 60
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [20]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false
      - uses: actions/cache@v3
        name: restore/setup pnpm cache
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint

      - name: Build
        run: pnpm build

  unit-tests:
    timeout-minutes: 60
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [20]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false
      - uses: actions/cache@v3
        name: restore/setup pnpm cache
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install dependencies
        run: pnpm install

      - name: Test
        run: pnpm test:no-coverage

  integration-tests:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    env:
      API_HOST_SERVER: https://devapi.adsabs.harvard.edu/v1
      API_HOST_CLIENT: https://devapi.adsabs.harvard.edu/v1
      SCIX_SESSION_COOKIE_NAME: test
      COOKIE_SECRET: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Create .env.local file
        run: |
          touch .env.local
          echo "API_HOST_CLIENT=$API_HOST_CLIENT" >> .env.local
          echo "API_HOST_SERVER=$API_HOST_SERVER" >> .env.local
          echo "SCIX_SESSION_COOKIE_NAME=$SCIX_SESSION_COOKIE_NAME" >> .env.local
          echo "COOKIE_SECRET=$COOKIE_SECRET" >> .env.local

      - name: Build e2e Service (from cache if possible)
        run: |
          USER_UID=$(id -u) USER_GID=$(id -g) DOCKER_BUILDKIT=1 docker buildx build \
          --cache-from type=local,src=/tmp/.buildx-cache \
          --cache-to type=local,dest=/tmp/.buildx-cache,mode=max \
          -t nectar-ci:e2e -f Dockerfile --target e2e .

      - name: Create test-results directory
        run: mkdir -p test-results && chmod 0777 test-results

      - name: Run e2e tests
        run: |
          USER_UID=$(id -u) USER_GID=$(id -g) docker compose \
          -f docker-compose.yml up --exit-code-from e2e e2e

      - name: Archive test results
        if: failure()
        run: |
          zip -r test-results.zip test-results

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: test-results.zip

      - name: Get prod container logs
        if: failure()
        run: docker logs $(docker-compose ps -q prod) > prod-container-logs.txt

      - name: Upload prod container logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: prod-container-logs
          path: prod-container-logs.txt

      - name: Shutdown Docker Compose
        run: docker compose down
