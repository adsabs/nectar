name: Pull Request

on: [ push, pull_request ]

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - uses: actions/cache/restore@v4
        with:
          path: .eslintcache
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

      - name: Install Deps
        run: SENTRYCLI_SKIP_DOWNLOAD=1 pnpm install

      - name: Lint
        run: pnpm lint --quiet

      - uses: actions/cache/save@v4
        if: always()
        with:
          path: .eslintcache
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

  build:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install Deps
        run: SENTRYCLI_SKIP_DOWNLOAD=1 pnpm install

      - name: Build
        run: pnpm build

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install Deps
        run: SENTRYCLI_SKIP_DOWNLOAD=1 pnpm install

      - name: Test
        run: pnpm test:coverage

      - name: Upload Coverage
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          fail_ci_if_error: false
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-nectar
          verbose: true
