#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const { component, story, test, barrel } = require('./templates.js');

// grab component name from terminal argument
const [name] = process.argv.slice(2);
if (!name) throw new Error('You must include a component name.');
const base = path.resolve(__dirname, `../..`);
const dir = path.join(base, 'src/components/', name);
const testDir = path.join(base, 'src/components/__tests__');
const storyDir = path.join(base, 'src/components/__stories__');

const writeFileErrorHandler = (err) => {
  if (err) {
    throw err;
  }
};

// if compnonent exists, do everything except create the component
const componentExists = fs.existsSync(dir);

if (!componentExists) {
  // create the folder
  fs.mkdirSync(dir, { recursive: true }, writeFileErrorHandler);
  // component.tsx
  fs.writeFile(path.join(dir, `${name}.tsx`), component(name), writeFileErrorHandler);
  // component barrel
  fs.writeFile(path.join(dir, `index.ts`), barrel(name), writeFileErrorHandler);
}
// storybook.jsx
fs.writeFile(path.join(storyDir, `${name}.stories.tsx`), story(name), writeFileErrorHandler);
// test.tsx
fs.writeFile(path.join(testDir, `${name}.test.tsx`), test(name), writeFileErrorHandler);

////////////////
/// Optional ///
////////////////

if (!componentExists) {
  fs.appendFile(path.join(base, 'src/components', 'index.ts'), `${barrel(name)}\n`, writeFileErrorHandler);
}
